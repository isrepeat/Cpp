<Window x:Class="WpfTestApp.MainWindow_SelectionViewModel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:local="clr-namespace:WpfTestApp"
        xmlns:localHelpers="clr-namespace:Helpers"
        xmlns:localControls="clr-namespace:WpfTestApp.Controls"
        mc:Ignorable="d"
        Title="MainWindow"
        ResizeMode="CanResize"
        WindowStyle="None"
        AllowsTransparency="False"
        Style="{StaticResource DarkWindowStyle}"
        Width="800"
        Height="600"
        >
    <!-- 
        Используем WindowChrome, чтобы отключить стандартную системную рамку 
        (которая оставляет белую полоску при ResizeMode=CanResize),
        но при этом сохранить возможность изменения размера окна.
    -->
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            GlassFrameThickness="0"
            UseAeroCaptionButtons="False" />
    </shell:WindowChrome.WindowChrome>
    <Window.Resources>
        <!--<SolidColorBrush x:Key="AppPanelColor" Color="#FF2C2C2C"/>-->
        <SolidColorBrush x:Key="AppPanelColor" Color="Transparent"/>
        <SolidColorBrush x:Key="AppBorderColor" Color="#FF3C3C3C"/>
        <SolidColorBrush x:Key="AppAccentColor" Color="#FF10A37F"/>

        <!--<SolidColorBrush x:Key="AppIsMouseOverColor" Color="#FF404040"/>
        <SolidColorBrush x:Key="AppSelectedFocusedColor" Color="#FF404040"/>
        <SolidColorBrush x:Key="AppSelectedUnfocusedColor" Color="#80404040"/>-->

        <!--<SolidColorBrush x:Key="AppIsMouseOverColor" Color="#FF404040"/>
        <SolidColorBrush x:Key="AppSelectedFocusedColor" Color="#FF2E8B57"/>
        <SolidColorBrush x:Key="AppSelectedUnfocusedColor" Color="#662E8B57"/>-->

        <SolidColorBrush x:Key="AppIsMouseOverColor" Color="#FF3C3C3C"/>
        <SolidColorBrush x:Key="AppSelectedFocusedColor" Color="#FF2D5B86"/>
        <SolidColorBrush x:Key="AppSelectedUnfocusedColor" Color="#662D5B86"/>


        <!-- Global theme styles (must be inherited for a specific element) -->
        <Style x:Key="DarkButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#444444" />
            <Setter Property="Foreground" Value="{StaticResource AppTextColor}" />
        </Style>

        <Style x:Key="DarkTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AppTextColor}" />
        </Style>


        <!-- Custom styles -->
        <Style x:Key="CustomListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="{StaticResource AppPanelColor}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style x:Key="CustomListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{StaticResource AppPanelColor}" />
            <Setter Property="Foreground" Value="{StaticResource AppTextColor}" />
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border Padding="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                >
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AppIsMouseOverColor}"/>
                </Trigger>

                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected}" Value="True"/>
                        <Condition Binding="{Binding (localHelpers:FocusStateAttachedProperties.IsParentControlFocused),
                                             RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AppSelectedFocusedColor}" />
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected}" Value="True"/>
                        <Condition Binding="{Binding (localHelpers:FocusStateAttachedProperties.IsParentControlFocused),
                                             RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AppSelectedUnfocusedColor}" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="SelectableCheckBoxContainerStyle" TargetType="CheckBox">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource AppTextColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <!-- 
                            Обязательно задаём Background, иначе Padding не ловит клики.
                            Без этого CheckBox не реагирует на нажатия вне текста.
                        -->
                        <Border Padding="5, 10"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                IsHitTestVisible="True"
                                >
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <DockPanel>
        <localControls:CustomTitleBar DockPanel.Dock="Top"/>

        <!-- Main content -->
        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource DarkButtonStyle}" />
                <Style TargetType="TextBlock" BasedOn="{StaticResource DarkTextBlockStyle}" />
            </StackPanel.Resources>
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="200" />
                </Grid.ColumnDefinitions>

                <localControls:ItemsControlEx
                    Grid.Column="0"
                    Items="{Binding Groups}"
                    >
                    <localControls:ItemsControlEx.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="10">
                                <TextBlock Text="{Binding Name}" 
                                           FontWeight="Bold"
                                           />
                                <ListView ItemsSource="{Binding Items}"
                                          Style="{StaticResource CustomListViewStyle}"
                                          ItemContainerStyle="{StaticResource CustomListViewItemStyle}"
                                          SelectionChanged="ListView_SelectionChanged"
                                          SelectionMode="Multiple"
                                          >
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <CheckBox Style="{StaticResource SelectableCheckBoxContainerStyle}"
                                                          IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                                          Width="400"
                                                          >
                                                    <TextBlock Text="{Binding Name}" />
                                                </CheckBox>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </DataTemplate>
                    </localControls:ItemsControlEx.ItemTemplate>
                </localControls:ItemsControlEx>

                <StackPanel Grid.Column="1"
                            Margin="10"
                            >
                    <TextBlock Text="Info:" />
                    <TextBlock>
                        <Run Text="Selection state = "/>
                        <Run Text="{Binding GroupsSelectionCoordinator.SelectionState, Mode=OneWay}" FontWeight="Bold"/>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Button Content="Test button"
                    Margin="0,10,0,0"
                    Click="TestButton_Click" />
        </StackPanel>
    </DockPanel>
</Window>
