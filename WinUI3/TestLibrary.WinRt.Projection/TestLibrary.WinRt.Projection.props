<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <NewLine>%0D%0A</NewLine>
    <NugetName>TestLibraryComponent</NugetName>
    <NugetConfiguration>Debug</NugetConfiguration>
  </PropertyGroup>
  

  <Target Name="CustomBeforeBuild" AfterTargets="Build">
    <PropertyGroup>
      <!-- 
        Regex groups:
        [2] - Platform
        [3] - Configuration
        [4] - Optional subfolder
        [5] - Rest path
      -->
      <RegExToCapturePlatformConfiguration>(.*\\?)(x86|x64|Win32)\\(Debug|Release)\\bin\\(.*?\\)?(.*)</RegExToCapturePlatformConfiguration>
    </PropertyGroup>
    
    
    <Message Importance="High" Text="==== [$(NugetName) nuget] Clean previous build ..." />
    <RemoveDir Directories="$(NugetStructureDir)\lib" />
    <RemoveDir Directories="$(NugetStructureDir)\runtimes" />
    
    
    <!-- Nuget structure -->
    <ItemGroup>
      <!-- Architecture-neutral assemblies.
           Note that .winmd is shared for different platforms (if windows runtime component is built as c++) 
      -->
      <NugetProjectionDll Include="$(CustomOutDirRoot)\AnyCPU\$(NugetConfiguration)\TestLibrary.WinRt.Projection\bin\TestLibrary.WinRt.Projection.dll" />
      <NugetWinRtMetaData Include="$(CustomOutDirRoot)\x64\$(NugetConfiguration)\TestLibrary.WinRt.WinUI3\bin\TestLibrary_WinRt_WinUI3.winmd" />

      <!-- Architecture-specific implementation DLLs should be copied into RID-relative folders. -->
      <NugetWinRtPri Include="$(CustomOutDirRoot)\**\bin\TestLibrary.WinRt.WinUI3.pri" />
      <NugetWinRtDlls Include="$(CustomOutDirRoot)**\bin\TestLibrary.WinRt.WinUI3.dll" />
    </ItemGroup>


    <!-- Correct item group filepathes -->
    <ItemGroup>
      <!-- Capture <Configuration> and <Platform> as meta data -->
      <__NugetWinRtDllsWithMetadata Include="@(NugetWinRtPri);@(NugetWinRtDlls)">
        <__Platform>$([System.Text.RegularExpressions.Regex]::Match(%(RecursiveDir), `$(RegExToCapturePlatformConfiguration)`).Groups[2].Value)</__Platform>
        <__Configuration>$([System.Text.RegularExpressions.Regex]::Match(%(RecursiveDir), `$(RegExToCapturePlatformConfiguration)`).Groups[3].Value)</__Configuration>
        <__OutDirSubFolder>$([System.Text.RegularExpressions.Regex]::Match(%(RecursiveDir), `$(RegExToCapturePlatformConfiguration)`).Groups[4].Value)</__OutDirSubFolder>
        <!-- TODO: Combine 4 and 5 group more readable. (Do not use newline bacause <__RecursiveDir_rest> item will saved \n and will be errors)-->
        <__RecursiveDir_rest>$([System.Text.RegularExpressions.Regex]::Match(%(RecursiveDir), `$(RegExToCapturePlatformConfiguration)`).Groups[4].Value)$([System.Text.RegularExpressions.Regex]::Match(%(RecursiveDir), `$(RegExToCapturePlatformConfiguration)`).Groups[5].Value)</__RecursiveDir_rest>
      </__NugetWinRtDllsWithMetadata>

      <!-- Replace 'Win32' to 'x86' -->
      <__NugetWinRtDllsWithMetadata Condition="'%(__Platform)' == 'Win32'">
        <__Platform>x86</__Platform>
        <__Configuration>%(__Configuration)</__Configuration>
        <__RecursiveDir_rest>%(__RecursiveDir_rest)</__RecursiveDir_rest>
      </__NugetWinRtDllsWithMetadata>

      <!-- Use only release or debug configuration for WinRt dlls and add suffix "win10-" to <Platform> -->
      <NugetWinRtDllsWithMetadata Include="@(__NugetWinRtDllsWithMetadata)" Condition="'%(__Configuration)' == '$(NugetConfiguration)'">
        <RecursiveDir_custom>win10-%(__Platform)\native\%(__RecursiveDir_rest)</RecursiveDir_custom>
      </NugetWinRtDllsWithMetadata>
    </ItemGroup>


    <!-- Print items -->
    <Message Importance="High" Text="==== [$(NugetName) nuget] __NugetWinRtDllsWithMetadata = [...\NugetStructure]\%(__NugetWinRtDllsWithMetadata.RecursiveDir)%(Filename)%(Extension)" />
    <Message Importance="High" Text="$(NewLine)"/>
    <Message Importance="High" Text="==== [$(NugetName) nuget] NugetWinRtDllsWithMetadata = [...\NugetStructure]\%(NugetWinRtDllsWithMetadata.RecursiveDir_custom)%(Filename)%(Extension)" />
    <Message Importance="High" Text="$(NewLine)"/>
    <Message Importance="High" Text="$(NewLine)"/>

    
    <!-- Copying -->
    <Message Importance="High" Text="==== [$(NugetName) nuget] Copy projection dll and .winmd ..." />
    <Copy SourceFiles="@(NugetProjectionDll)" DestinationFolder="$(NugetStructureDir)\lib\net6.0-windows10.0.19041.0\" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(NugetWinRtMetaData)" DestinationFolder="$(NugetStructureDir)\lib\uap10.0\" SkipUnchangedFiles="true" />

    <Message Importance="High" Text="==== [$(NugetName) nuget] Copy dlls ..." />
    <Copy SourceFiles="@(NugetWinRtDllsWithMetadata)" DestinationFolder="$(NugetStructureDir)\runtimes\%(RecursiveDir_custom)" SkipUnchangedFiles="true" />
  </Target>
</Project>